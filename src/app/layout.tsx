// import type React from "react"
// import type { Metadata } from "next"
// import { Geist, Geist_Mono } from "next/font/google"
// import "./globals.css"

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// })

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// })

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
//     generator: 'v0.app'
// }

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode
// }>) {
//   return (
//     <html lang="en">
//       <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>{children}</body>
//     </html>
//   )
// }

//////////////////////////////////////////////////////////////////////////////////////////////////////

// app/layout.tsx
import "./globals.css";
import { I18nProvider } from "@/components/i18n/I18nProvider";
import { getDictionary } from "@/i18n/dictionaries";
import { DEFAULT_LANG, type Lang } from "@/i18n/config";

export default function RootLayout({ children }: { children: React.ReactNode }) {
  const initialLang: Lang = DEFAULT_LANG;        // "ru"
  const initialDict = getDictionary(initialLang); // sync obyekt

  return (
    <html lang={initialLang}>
      <body>
        <I18nProvider initialLang={initialLang} initialDict={initialDict}>
          {children}
        </I18nProvider>
      </body>
    </html>
  );
}


